name: Build
on:
  push:
  workflow_dispatch:
jobs:
  sparse:
    name: Sparse Checkout
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: .github
      - name: List files
        run: ls -la

  lint:
    name: Lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
    steps:
      - uses: mskelton/setup-yarn@v2
        with:
          node-version: "18.x"
      - name: Lint
        run: yarn lint:ci
        continue-on-error: true
      - name: Annotate Code Linting Results
        uses: mskelton/eslint-annotate-action@glob-testing
        with:
          only-pr-files: false
          markdown-report-on-step-summary: true
          report-json: |
            apps/*/eslint-report.json
            packages/*/eslint-report.json

  changes:
    name: Find changed packages
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v4
      - name: Generate filters.yml
        run: |
          filename=.github/filters.yml

          for package in packages/*; do
            echo "$(basename $package):" >> $filename
            echo "  - $package/**" >> $filename
            echo "  - package.json" >> $filename
            echo "  - yarn.lock" >> $filename
          done
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: .github/filters.yml

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.services != '[]'
    strategy:
      fail-fast: false
      matrix:
        service: ${{ fromJSON(needs.changes.outputs.services) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: mskelton/setup-yarn@v2
        with:
          node-version: "20.x"
      - name: Test
        run: yarn test
        working-directory: ./packages/${{ matrix.service }}

  test-status:
    name: Test Status
    runs-on: ubuntu-latest
    needs: [test]
    if: always()
    steps:
      - name: Tests passed
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - name: Tests failed
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1

  e2e:
    name: End-to-end Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: mskelton/setup-yarn@v2
        with:
          node-version: "20.x"
      - name: Playwright report comment
        if: ${{ always() && github.event_name != 'merge_group' }}
        uses: daun/playwright-report-summary@v3.5.2
        with:
          report-file: "test-results/playwright-json-report.json"
          report-url: https://example.com
          comment-title: "Playwright test results"
          test-command: "yarn test:e2e"
          job-summary: true
